import point.sos

alias path = array point
alias shape = array point

appendhelp_copyin : (in: point, from: point) -> void = 
    0 // in.x = from.x; in.y = from.y 

appendhelp_tail : (p: path) -> path = 
    tail: path = p.length-1 of [{0.0, 0.0}];
    appendhelp_copyin(tail, p); tail

// Appends two paths, merging them at their endpoints, if needed
append : (p1 : path, p2: path) -> path = 
    if p1.length == 0 then copy(p2)
    else if p2.length == 0 then copy(p1)
    else 
    merge: bool = p1[p1.length-1] == p2[0];
    p2c: path = (if merge then appendhelp_tail(p2) else p2);
    ret: path = p1 @ p2c;
    (if merge then free(p2c) else 0); ret

reverse: (p : path) -> path = p // TODO 
