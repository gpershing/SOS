struct point = {float x_pos, float y_pos}
Ready!
alias vector = point
Ready!
point origin = point{0,0}
Ready!

Ready!
REJECT
int pow(int n, int m) = n^m
Ready!
int named_func_app = pow(m=3,n=2)
Ready!
int ordered_func_app = pow(2,3)
Ready!

Ready!
REJECT
point p1 = point{2,3}
Ready!
p1.x = 2
Ready!

Ready!
REJECT
array point_list = [origin, p2]
Ready!
point_list[1] = {1,2}
Ready!

Ready!
REJECT
if (-10%2*8/4^2+1 == -(10%2*8/4)^2+1) then point_list[1] = point{1,2} else point_list[1] = {3,4}
Ready!
struct point = {float x_pos, float y_pos}
Ready!
alias vector = point
Ready!
point origin = point{0,0}
Ready!

Ready!
REJECT
int pow(int n, int m) = n^m
Ready!
int named_func_app = pow(m=3,n=2)
Ready!
int ordered_func_app = pow(2,3)
Ready!

Ready!
REJECT
point p1 = point{2,3}
Ready!
p1.x = 2
Ready!

Ready!
REJECT
array point_list = [origin, p2]
Ready!
point_list[1] = {1,2}
Ready!

Ready!
REJECT
if (-10%2*8/4^2+1 == -(10%2*8/4)^2+1) then point_list[1] = point{1,2} else point_list[1] = {3,4}
Ready!
struct point = {float x_pos, float y_pos}
Ready!
alias vector = point
Ready!
point origin = point{0,0}
Ready!

Ready!
REJECT
int pow(int n, int m) = n^m
Ready!
int named_func_app = pow(m=3,n=2)
Ready!
int ordered_func_app = pow(2,3)
Ready!

Ready!
REJECT
point p1 = point{2,3}
Ready!
p1.x = 2
Ready!

Ready!
REJECT
array point_list = [origin, p2]
Ready!
point_list[1] = {1,2}
Ready!

Ready!
REJECT
if (-10%2*8/4^2+1 == -(10%2*8/4)^2+1) then point_list[1] = point{1,2} else point_list[1] = {3,4}
Ready!
