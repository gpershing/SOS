/*alias of int */
alias year = int
alias month = int

//alias of alias
alias day = month 

present_year: year = 2021
present_month: month = 3
present_day: day = 20
print(present_year) //2021
print(present_month) //3
print(present_day) //20


/*alias operations */

//alias operator primitive -> alias
//year + int -> year
test: year = present_year + 1
print(test) //2021+1=2022

//alias operator primitive -> alias2
//year + int -> month
test2: month = present_year + 1
print(test2) //2021+1=2022

//alias operator primitive -> aliasofalias
//year + int -> day
test3: day = present_year + 3
print(test3) //2021+1=2022

//alias operator primitive -> primitive
//year + int -> int
test4: int = present_year + 1
print(test4) //2021+1=2022

//alias operator alias -> primitive
//year + year -> int
test5: int = present_year + present_year
print(test5) //2021+2021=4042

//alias operator alias2 -> primitive
//year + month -> int
test6: int = present_year + present_month
print(test6) //2021+3=2024

//alias operator aliasofalias -> primitive
//year + month -> month
test7: int = present_year + present_day
print(test7) //2021+20=2041

//mixing int operators and aliases
test8: int = present_month*present_day-present_year/10%9
print(test8) //3*20-(2021/10)%9=56

/*alias comparison */
//primitive vs alias
i1: int = 1
y1: year = 1
result: bool = i1 == y1
print(result) //True

//alias vs alias
y2: year = 1
result2: bool = y1 == y2
print(result2) //True

//alias vs alias2
m1: month = 1
result3: bool = y1 == m1
print(result3) //True

//alias vs aliasofalias
d1: day = 1
result4: bool = y1 == d1
print(result4) //True

/*alias of struct*/
struct date = {day: int, yr: year, mth: month}
present_day: date = {20, present_year, present_month}
print(present_day.yr) //2021

//alias of struct field
present_day.yr = present_month
print(present_day.yr) //3

//alias of struct
alias new_date = date
newer: new_date = present_day
print(newer.day) //20

newer2: new_date = {1, 2, 3}
print(newer2.day) //1

result5: bool = newer == present_day
print(result5) //True (pass by reference)
result6: bool = newer == newer2 
print(result6) //False

/*alias of float*/
alias x_dist = float
x: x_dist = 1.2
printf(x) //1.2

/*alias array*/
//alias of array int
alias scores = array int
class1: scores = [87,93,70]
print(class1[0]) //87
class1 = class1 + 3
print(class1[0]) //90

//alias of alias of array int
alias marks = scores
class2: marks = class1
class3: marks = [87, 93, 70]
result7: array array bool = class2 == class1
print(result7[0][0]) //True
result8: array array bool = class3 == class1
print(result8[0][0]) //False

//alias of array of alias of array int: array array int
alias class_scores = array scores
highschool1: class_scores = [class1, [1,2,3]]
print(highschool1[0][0]) //90

//alias of array array array int
alias school_scores = array array array int
district1: school_scores = [highschool1, [[4,5,6], [7,8,9]], [[10,11], [12,13,14,15]]]
print(district1[1][0][0]) //4
