//predefining struct in outer scope
struct normal = {int field}

normal func1(int x) = 
    normal temp = {x}; temp

normal a = func1(5)
print(a.field) //5


//defining struct in function with known expression return type
int func2(int x) = 
    struct s = {int field};
    s temp = {field:x};
    s.field

int x = func2(5)
print(x) //5


//fancy: outer scruct has an assigned field during declaration
struct outer = {
    int field,
    int func2() = 
        struct s = {int field1, int field2};
        s temp = {1, 2};
        s.x + s.y
}

outer temp  = {5, 5}
print(temp.field) //5
print(temp.func2()) //5
